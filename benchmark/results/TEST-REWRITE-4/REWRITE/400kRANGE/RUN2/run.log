/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
2022-10-18 16:55:06,431 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-531248e2d27612a01b915cc6bab9831d
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7f87e87f78b0>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
2022-10-18 16:55:06,644 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-d5c90b9483fcdaeb927870e798ece463
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7fc106623a60>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 624999, 1)')"

2022-10-18 16:55:06,691 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-297e402d87b32e29e0a7ba02ac7e06e7
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7f8411e278b0>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
2022-10-18 16:55:06,969 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-43e790d03fc23bee33e02201422b9ad0
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7ff97246f640>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

2022-10-18 16:55:06,974 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-edab4cb007e42aba5d7d583c992807f5
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7ff13bed7520>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

2022-10-18 16:55:06,975 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-493a14e2ba4b58a1bbe91ba1f3b9fead
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7fe9887a79d0>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
2022-10-18 16:55:07,062 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-cc087cc78630dfb70847e7d99e8a2a6a
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7f77d064fa30>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

2022-10-18 16:55:07,071 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-f9e5197ec7f83827396447e20f9915f6
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7f39755f0190>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
2022-10-18 16:55:07,128 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-57dd39b000339837db230e2b3765da02
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7f30dde5ba90>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
2022-10-18 16:55:07,184 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-099fe3f82a54a1fef8b6ce7baff971a6
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7f16d04f7880>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

2022-10-18 16:55:07,186 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-cb9391504304ab5b72be46a8a93654a7
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7f076b1c7460>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

2022-10-18 16:55:07,223 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-4d382901c271d7246d2bdf2506fd43d4
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7fe13068f670>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

2022-10-18 16:55:07,224 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-b6f6700fd5a2dff18ca192ba6924574f
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7fa228316230>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
2022-10-18 16:55:07,247 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-517b5e50d16a5c238d28742ee849d60a
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7f17b504f340>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:86: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
2022-10-18 16:55:07,303 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-aa2332c5cd98903f59d208bf95e95db7
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7f6bf50ef850>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625000, 1)')"

2022-10-18 16:55:07,332 - distributed.worker - WARNING - Compute Failed
Key:       execute_one_subtree-5645f895f20412894cb505975c3edd2e
Function:  execute_one_subtree
args:      (<forms.executor.executionnode.FunctionExecutionNode object at 0x7f1347a2b7c0>)
kwargs:    {}
Exception: "ValueError('Must pass 2-d input. shape=(1, 625001, 1)')"

Distributing data time: 4.839909315109253
partitions: 0 8 0 0
partitions: 8 16 0 0
partitions: 0 5 0 0
partitions: 16 23 0 0
partitions: 0 5 0 0
partitions: 23 32 0 0
partitions: 0 5 0 0
partitions: 32 40 0 0
partitions: 0 5 0 0
partitions: 40 48 0 0
partitions: 0 5 0 0
partitions: 48 56 0 0
partitions: 0 5 0 0
partitions: 56 64 0 0
partitions: 0 5 0 0
partitions: 64 72 0 0
partitions: 0 5 0 0
partitions: 72 80 0 0
partitions: 0 5 0 0
partitions: 80 88 0 0
partitions: 0 5 0 0
partitions: 88 96 0 0
partitions: 0 5 0 0
partitions: 96 104 0 0
partitions: 0 5 0 0
partitions: 104 112 0 0
partitions: 0 5 0 0
partitions: 112 120 0 0
partitions: 0 5 0 0
partitions: 120 127 0 0
partitions: 0 5 0 0
Execution time: 1.5288939476013184
Traceback (most recent call last):
  File "/home/ubuntu/forms/benchmark/test_driver.py", line 50, in <module>
    result = fs.compute_formula(df, formula_str)
  File "/home/ubuntu/forms/forms/core/forms.py", line 44, in compute_formula
    res = plan_executor.df_execute_formula_plan(df, root)
  File "/home/ubuntu/forms/forms/executor/dfexecutor/planexecutor.py", line 81, in df_execute_formula_plan
    return res_table.get_table_content()
  File "/home/ubuntu/forms/forms/executor/table.py", line 59, in get_table_content
    self.df = self.remote_df.get_df_content()
  File "/home/ubuntu/forms/forms/executor/dfexecutor/remotedf.py", line 80, in get_df_content
    [
  File "/home/ubuntu/forms/forms/executor/dfexecutor/remotedf.py", line 82, in <listcomp>
    [one_partition.remote_obj.get_computed_result() for one_partition in one_row],
  File "/home/ubuntu/forms/forms/executor/dfexecutor/remotedf.py", line 82, in <listcomp>
    [one_partition.remote_obj.get_computed_result() for one_partition in one_row],
  File "/home/ubuntu/forms/forms/runtime/remoteobject.py", line 33, in get_computed_result
    return self.object_ref.result()
  File "/home/ubuntu/.local/lib/python3.10/site-packages/distributed/client.py", line 277, in result
    raise exc.with_traceback(tb)
  File "/home/ubuntu/forms/forms/executor/dfexecutor/planexecutor.py", line 45, in execute_one_subtree
    res_table = function_executor(physical_subtree)
  File "/home/ubuntu/forms/forms/executor/dfexecutor/basicfuncexecutor.py", line 132, in sum_df_executor
    return distributive_function_executor(physical_subtree, Function.SUM)
  File "/home/ubuntu/forms/forms/executor/dfexecutor/basicfuncexecutor.py", line 370, in distributive_function_executor
    return construct_df_table(result)
  File "/home/ubuntu/forms/forms/executor/dfexecutor/utils.py", line 242, in construct_df_table
    return DFTable(df=pd.DataFrame(array))
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py", line 761, in __init__
    mgr = ndarray_to_mgr(
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/internals/construction.py", line 330, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/internals/construction.py", line 584, in _prep_ndarraylike
    raise ValueError(f"Must pass 2-d input. shape={values.shape}")
ValueError: Must pass 2-d input. shape=(1, 625000, 1)
Get table content time: 0.7020878791809082
Get table content time: 0.4288032054901123
Get table content time: 0.2702195644378662
Get table content time: 0.32743334770202637
Get table content time: 0.6387021541595459
Get table content time: 0.41106438636779785
Get table content time: 0.7427058219909668
Get table content time: 0.42015838623046875
Get table content time: 0.8917763233184814
Get table content time: 0.3403656482696533
Get table content time: 0.848881721496582
Get table content time: 0.4104292392730713
Get table content time: 0.3273496627807617
Get table content time: 0.6970863342285156
Get table content time: 0.39342641830444336
Get table content time: 0.2711753845214844
Get table content time: 0.2850303649902344
Get table content time: 0.4110910892486572
Get table content time: 0.470184326171875
Get table content time: 0.4371788501739502
Get table content time: 0.41266918182373047
Get table content time: 0.47157764434814453
Get table content time: 0.35424041748046875
Get table content time: 0.5449550151824951
Get table content time: 0.3988766670227051
Get table content time: 0.6452302932739258
Get table content time: 0.4399259090423584
Get table content time: 0.7837305068969727
Get table content time: 0.3496060371398926
Get table content time: 0.6340618133544922
Get table content time: 0.3012502193450928
